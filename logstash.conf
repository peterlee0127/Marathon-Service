input {
    file {
        path => "/var/log/nginx/access.log"
        type => "nginx-access"
    }
    file {
        path => "/var/log/nginx/error.log"
        type => "nginx-error"
    }

    file{
        path => "/var/log/mongodb/mongod.log"
         type => "mongod"
    }
    file{
        path => "/var/log/yum.log"
         type => "yum-log"
    }
    file {
        path => "/var/log/secure"
        type => "secure"
    }
    file {
        path => "/home/peterlee/.pm2/logs/lineBot-*.log"
	type => "lineBot"
    }
    file {
        path => "/home/peterlee/.pm2/logs/airNode-out-*.log"
        type => "airNode"
    }
 
    # file{
    #    path => "/var/log/mesos/mesos-master.WARNING"
    #    type => "mesos-master-WARNING"
    #}
    file{
        path => "/var/log/mesos/mesos-master.ERROR"
        type => "mesos-master-ERROR"
    }
    #file{
    #    path => "/var/log/mesos/mesos-master.INFO"
    #    type => "mesos-master-INFO"
    #}
    
    #file{
    #    path => "/var/log/mesos/mesos-slave.WARNING"
    #    type => "mesos-slave-WARNING"
    #}
    file{
        path => "/var/log/mesos/mesos-slave.ERROR"
        type => "mesos-slave-ERROR"
    }
    #file{
    #    path => "/var/log/mesos/mesos-slave.INFO"
    #    type => "mesos-slave-INFO"
    #}
}

filter { 
    if [type] == "secure" {
	grok {
	  match => { "message" => "%{DATA:Month} %{DATA:Day} %{DATA:Time} %{DATA:Host} %{GREEDYDATA:Info} PATH=%{DATA:Path} %{GREEDYDATA:Command}"}
	}
    }
    if [type] == "nginx-access" {
      grok {
	match => { "message" => "%{IPORHOST:source_ip} - - \[%{DATA:Date}\] \"%{DATA:Method} %{DATA:Url} %{DATA:Protocol}\" %{NUMBER:StatusCode} %{NUMBER:Byte} \"%{DATA:Referrer}\" \"%{DATA:Agent}\"" }
	  remove_field => "message"
      }	
      useragent {
	source => "Agent"
	target => "user_agent"
	remove_field => "Agent"
      }
      date {
	match => [ "Date", "dd/MMM/YYYY:H:m:s Z" ]
      }
      geoip {
        source => "source_ip"
        target => "geoip"
      }
    }
    if [type] == "nginx-error" {
	grok {
	 match => {
        	"message" => 
            		"(?<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[%{DATA:err_severity}\] (%{NUMBER:pid:int}#%{NUMBER}: \*%{NUMBER}|\*%{NUMBER}) %{DATA:err_message}(?:, client: (?<client_ip>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server})(?:, request: \"%{DATA:request}\")?(?:, upstream: \"%{DATA:upstream}\")?(?:, host: \"%{DATA:host}\")?(?:, referrer: \"%{URI:referrer})?"
	  	remove_field => "message"
		  } 
	}
    }
     if [type] == "lineBot" {
	date {
		match => [ "timestamp" , "yyyy-MM-dd hh:mm:ssZ" ]
	}
      	json {
		source => "[message]"
		target => "temp"
	}
	json {
		source => "[temp][message]"
		target => "json"
		remove_field => "[temp][message]"
		remove_field => "message"
	}
	json {
		source => "[temp][message][source]"
		target => "message_source"
	}
	json {
		source => "[temp][message][message]"
		target => "message"
	}
	
    }    
    if [type] == "airNode" {
	date {
		match => [ "timestamp" , "yyyy-MM-dd hh:mm:ssZ" ]
	}
      	json {
		source => "[message]"
		target => "temp"
	}
	json {
		source => "[temp][message]"
		target => "json"
		remove_field => "[temp][message]"
		remove_field => message
	}
    }
}

output {
     stdout { codec => json }
    elasticsearch { hosts => ["127.0.0.1:9200"] }
}
